function  p= UD_points(dim,  K ) 
 
%*****************************************************************************80
%
%%  UD_points generates K sample points for  uncorrelated dimension  quadrature
 
%  Modified:
%
%    29 March 2010
%
%  Author:
%
%    Dishi Liu
 
%  Reference:

%   Liu, Dishi
%   Uncertainty Quantification with Shallow Water Equations
%   Phd Thesis, Institute of Scientific Computing, Technical University
%   Braunschweig, 2009

%  Parameters:
%
%    Input, integer DIM, the dimmension number
%
%    Input, integer K,   the number of sample points
%
 
%    Output, real p, the  K points


K_pool=[10  20   30  40  50  100  200 300 400 500  1000  2000  3000  4000  5000 10000  20000  30000  40000  50000];

good_level_set_9D_LA=[ ...  %  8-July-2009 
100000009 100000017 100000011 100000009 100000019 100000019 100000001 100000019 ; ...   
100000011 100000027 100000029 100000021 100000019 100000009 100000031 100000039 ; ...   
100000057 100000031 100000003 100000007 100000007 100000027 100000001 100000039 ; ...   
100000011 100000031 100000029 100000039 100000033 100000051 100000051 100000059 ; ...   
100000091 100000091 100000041 100000057 100000009 100000019 100000003 100000019 ; ...   
100000017 100000063 100000009 100000107 100000093 100000019 100000151 100000033 ; ...   
100000339 100000037 100000077 100000263 100000213 100000383 100000011 100000227 ; ...   
100000277 100000561 100000177 100000163 100000399 100000403 100000411 100000261 ; ...   
100000471 100000437 100000161 100000273 100000427 100000633 100000597 100000237 ; ...   
100000183 100000843 100000677 100000313 100000723 100000627 100000061 100000699 ; ...   
100001219 100000079 100000377 100000929 100000343 100000093 100000427 100001739 ; ...   
100000427 100000699 100002119 100003769 100000119 100000711 100002961 100001507 ; ...   
100005413 100003537 100001627 100002259 100001821 100002577 100003007 100004611 ; ...   
100002841 100001511 100007147 100006817 100006593 100007061 100006129 100004599 ; ...   
100001221 100005289 100001711 100007433 100003183 100001983 100008093 100008879 ; ...   
100018137 100006441 100000269 100007707 100000529 100017577 100006233 100004741 ; ...   
100023877 100024099 100006349 100028949 100002843 100022479 100022889 100021287 ; ...   
100039117 100045291 100013437 100008367 100021549 100040627 100042337 100054619 ; ...   
100011863 100011931 100013711 100020771 100058881 100070621 100047219 100004907 ; ...   
100064083 100059321 100046507 100060183 100051183 100028717 100068561 100079869 ; ...   
 ] ; 

if  not(ismember(dim, [1:9]));
     error('Dimension number exceeds 9');
     return
end
      [tf, loc]=ismember(K, K_pool);

      if tf
          level_set= good_level_set_9D_LA(loc, 1:dim-1);

          p=zeros(dim, K);

          delta=1/K;

          p(1, :)=delta/2 : delta: 1;

           for i=2: dim
              p(i, :) = UCC_2D_function_v3(level_set(i-1),  1,   p(i-1, :)) ;
           end
      else
          error('The K number should be within the set  [10  20   30  40  50  100  200 300 400 500  1000  2000  3000  4000  5000 10000  20000  30000  40000  50000]');

      end
       
 